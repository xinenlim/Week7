name: Simple Deployment
on:
  push:
    tags:
      - 'v*'
    
jobs:
  build:
    name: Build and Test for Deployment
    runs-on: Ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 

    - name: install plugin
      run: |
        pip install pytest pytest-cov
    - name: checkout my codes
      uses: actions/checkout@v4
      with:
        repository: lowkh/CI_Demo_T01_2023

    - name: Checkout private repo
      uses: actions/checkout@v4
      with:
        repository: lowkh/hiddenWeek7
        token: ${{ secrets.WEEK7 }} 
        path: hiddenCode

    - name: list current files
      run: |
        ls
        sudo mv ./hiddenCode/*.* ./

    - name: Test Command
      if: always()
      run: |
        pytest -v -cov --junitxml=report.xml

    - if: ${{ failure() }}
      name: Create Issue on Failed workflow
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: Action workflow failed.
        body: |
          ### Context
          [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
          Workflow name - `${{ github.workflow }}`
          Job -           `${{ github.job }}`
          status -        `${{ job.status }}`
          assignees: lowkh
          
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "report.xml"

  Deploy_To_Git_Release:
    needs: build
    name: Release to Git for Deployment
    runs-on: Ubuntu-latest
    steps:
    - name: Set environment version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: create a release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{env.RELEASE_VERSION }}
